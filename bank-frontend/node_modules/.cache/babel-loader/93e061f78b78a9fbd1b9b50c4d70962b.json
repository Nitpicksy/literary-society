{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Fax\\\\master\\\\Sistemi elektronskog placanja\\\\Projekat\\\\ProjekatKod\\\\literary-society\\\\bank-frontend\\\\src\\\\UI\\\\Input\\\\Input.js\";\nimport React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { makeStyles } from '@material-ui/core';\n\nconst input = props => {\n  let inputElement = null;\n  const classes = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap'\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: 200\n    }\n  }));\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        error: props.error,\n        helperText: props.error ? props.errorMessage : '',\n        ...props.elementConfig,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        error: props.error,\n        helperText: props.error ? props.errorMessage : '',\n        ...props.elementConfig,\n        onChange: props.changed,\n        multiline: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'select':\n      inputElement = /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        label: props.elementConfig.label,\n        value: props.value,\n        onChange: props.changed,\n        select: true,\n        SelectProps: {\n          multiple: true\n        },\n        children: props.elementConfig.options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n          value: option.value,\n          children: option.displayValue\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'date':\n      inputElement = /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        error: props.error,\n        ...props.elementConfig,\n        onChange: props.changed,\n        className: classes.textField,\n        InputLabelProps: {\n          shrink: true\n        },\n        pattern: \"\\\\d{4}-\\\\d{2}-\\\\d{2}\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 28\n      }, this);\n      break;\n\n    case 'checkbox':\n      inputElement = /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        label: props.elementConfig.label,\n        control: /*#__PURE__*/_jsxDEV(Checkbox, {\n          onChange: props.changed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 28\n      }, this);\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/_jsxDEV(TextField, {\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true,\n        error: props.error,\n        helperText: props.error ? props.errorMessage : '',\n        ...props.elementConfig,\n        onChange: props.changed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 28\n      }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: inputElement\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\nexport default input;","map":{"version":3,"sources":["D:/Fax/master/Sistemi elektronskog placanja/Projekat/ProjekatKod/literary-society/bank-frontend/src/UI/Input/Input.js"],"names":["React","TextField","MenuItem","FormControlLabel","Checkbox","makeStyles","input","props","inputElement","classes","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","width","elementType","error","errorMessage","elementConfig","changed","label","value","multiple","options","map","option","displayValue","shrink"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const classes = makeStyles((theme) => ({\r\n        container: {\r\n            display: 'flex',\r\n            flexWrap: 'wrap',\r\n        },\r\n        textField: {\r\n            marginLeft: theme.spacing(1),\r\n            marginRight: theme.spacing(1),\r\n            width: 200,\r\n        },\r\n    }));\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <TextField variant=\"outlined\" margin=\"normal\" fullWidth\r\n                error={props.error} helperText={props.error ? props.errorMessage : ''}\r\n                {...props.elementConfig} onChange={props.changed} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <TextField variant=\"outlined\" margin=\"normal\" fullWidth\r\n                error={props.error} helperText={props.error ? props.errorMessage : ''}\r\n                {...props.elementConfig} onChange={props.changed}\r\n                multiline />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = <TextField variant=\"outlined\" margin=\"normal\" fullWidth\r\n                label={props.elementConfig.label} value={props.value} onChange={props.changed}\r\n                select SelectProps={{ multiple: true }}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <MenuItem key={option.value} value={option.value}>{option.displayValue}</MenuItem>\r\n                ))}\r\n            </TextField>;\r\n            break;\r\n        case ('date'):\r\n            inputElement = <TextField variant=\"outlined\" margin=\"normal\" fullWidth \r\n                error={props.error} {...props.elementConfig} onChange={props.changed} className={classes.textField}\r\n                InputLabelProps={{shrink: true,}} pattern=\"\\d{4}-\\d{2}-\\d{2}\"/>;\r\n            break;\r\n        case ('checkbox'):\r\n            inputElement = <FormControlLabel label={props.elementConfig.label}\r\n                control={\r\n                    <Checkbox onChange={props.changed} />\r\n                }\r\n            />;\r\n            break;\r\n        default:\r\n            inputElement = <TextField variant=\"outlined\" margin=\"normal\" fullWidth\r\n                error={props.error} helperText={props.error ? props.errorMessage : ''}\r\n                {...props.elementConfig} onChange={props.changed} />;\r\n    }\r\n    return (\r\n        <div>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default input;"]},"metadata":{},"sourceType":"module"}